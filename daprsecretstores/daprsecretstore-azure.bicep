// RECIPE INPUT -----------------------------------

@description('Information about the platform and resource running this recipe. Automatically generated by Radius.')
param context object

@description('Managed identity ID for workload identity. Set as part of environment creation.')
param clientId string

@description('Azure region to deploy resources into')
param location string = resourceGroup().location

@description('KeyVault Administrator - Allows all data plane operations')
var roleDefinitionId = '00482a5a-887f-4fb3-b363-3b7fe8e74483'

// RECIPE RESOURCES -----------------------------------

resource keyvault 'Microsoft.KeyVault/vaults@2022-07-01' = {
  name: 'secretstore-${uniqueString(context.resource.id)}'
  location: location
  properties: {
    sku: {
      family: 'A'
      name: 'standard'
    }
    tenantId: subscription().tenantId
    enableRbacAuthorization: true
  }
}

resource rbac 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  scope: keyvault
  name: guid(keyvault.id, clientId, roleDefinitionId)
  properties: {
    principalId: clientId
    roleDefinitionId: roleDefinitionId
  }
}

// RECIPE OUTPUT -----------------------------------

output values object = {
  type: 'secretstores.azure.keyvault'
  version: 'v1'
  metadata: {
    vaultName: keyvault.name
    azureClientId: clientId
  }
}
